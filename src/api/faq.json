{
  "list": [
    {
      "no": 1,
      "question": "장/단점 등을 자유롭게 기술해주세요",
      "answer": "저는 디자인을 했었습니다. 제가 디자인을 알고, 마크업을 아는 만큼 디자인팀과 UI/UX 관련 커뮤니케이션이 쉽게 오갑니다. 디자이너들이 지금까지 개발을 몰라 답답했던 부분을 설명하며 이해하는 것을 돕고 그들이 원하는 만큼 아웃풋을 만들기 위해 노력합니다. 기능적으로 어려운 일이 생겨도 디자이너의 맘을 알기에 안된다는 말보다는 차선 안을 제시합니다. 이론은 부족할 수 있습니다. 그 부분은 백지여서 새로운 습득에 있어 받아들이기 더 좋을 수 있는 기회라고 생각합니다. Front-end 개발자가 디자인 출신인 것은 장점이라 생각합니다.\n저의 단점은 글을 잘 못 씁니다. 에세이도 좋아하고 철학 책도 읽지만 글 실력은 늘지 않습니다. 그래서 저는 대화로 소통합니다. 타팀과 커뮤니케이션이 필요할 때는 직접 가서 설명하거나 설득하고 협의합니다. 이전에 메신저나 메일로만 소통했던 것에 비하여 소통이 원활하게 흘러가고 협의 시간은 줄었습니다. 글을 잘 쓰는 것은 힘들지만 누군가와 대화하는 것에 대한 어려움이 적습니다."
    },
    {
      "no": 2,
      "question": "디자인 전공에서 개발자로 전향된 사유가 어떻게 되나요?",
      "answer": "제가 개발자가 된 이유는 개발의 첫 번째가 이슈 없는 아웃풋을 만들면 된다였습니다. 저는 중학생 때부터 디자인을 배웠습니다. 디자인을 하면서 느낀 점은 주관적인 점이 크다였습니다. 대학에서 마크업 관련 수업을 들었는데 액션이 이루어지고 페이지 이동이 되는 부분이 신기했습니다. 그 후 마크업과 jquery 학원을 다녀보니 생각보다 쉬웠습니다. 이 정도면 더 큰 물에서 놀아보자는 생각에 프론트엔드 개발자로 취업을 했습니다. 개발자로 전향하고 새로운 것들을 찾고 배우고 고민하고 아웃풋을 만들었을 때 개발자를 생업으로 삼기로 결정하였습니다."
    },
    {
      "no": 3,
      "question": "프로그래밍을 시작한 경위와 본격적으로 투신하고 생업으로 삼기로 결정한 이야기를 해주세요.",
      "answer": "제가 개발자가 된 이유는 답이 있다였습니다. 저는 중학생 때부터 디자인을 배웠습니다. 디자인을 하면서 느낀 점은 주관적인 점이 크다였습니다. 대학에서 마크업 관련 수업을 들었는데 액션이 이루어지고 페이지 이동이 되는 부분이 신기했습니다. 그 후 마크업과 jquery 학원을 다녀보니 생각보다 쉬웠습니다. 이 정도면 더 큰 물에서 놀아보자는 생각에 프론트엔드 개발자로 취업을 했습니다. 개발자로 전향하고 새로운 것들을 찾고 배우고 고민하고 아웃풋을 만들었을 때 개발자를 생업으로 삼기로 결정하였습니다."
    },
    {
      "no": 4,
      "question": "기술 경향을 파악하고 업무 역량을 강화하기 위한 본인의 학습 방법을 구체적으로 설명해주세요.",
      "answer": "저는 부족했던 기술로 토이 프로젝트 만드는 것이 좋습니다. jqeury만 사용하다가 오직 javascript로만 개발하는 습관을 만들어보라 했을 때는 사다리 타기 프로젝트를, vue에 대한 공부를 시작할 때는 가계부 프로젝트를 만들었습니다. 책을 읽고 예제를 따라 하지만 이해가 안 가는 것이 많습니다. 그래도 일단 따라가기는 하지만 재미가 없었습니다. 하지만, 응용하여 프로젝트를 만들었을 때는 파악하고 생각하고 고민하고 찾아보고를 반복합니다. 계속 노트에 해결 방법 여러 가지를 적고 실행해보고 반복합니다."
    },
    {
      "no": 5,
      "question": "지금까지의 업무 경험에서 어떤 경험이 가장 가치가 있는지 이야기해주세요.",
      "answer": "새로운 걸 공부하고 그것을 상용에 오픈할 때마다 가치가 있다고 느낍니다. 최근에 vue랑 nuxt를 사용하여 서비스를 오픈하였습니다. 지금까지 해왔던 것 중 참여도가 가장 높은 프로젝트이자 vue를 처음 사용하는 것이었어서 최대한 깔끔하게 개발하고 싶은 욕심에 다른 개발자들과 상의도 많이 하였고 열심히 테스트를 했습니다. 새로운 구조와 해왔던 것과 다른 사용법에 어렵기도 하였지만 해왔던 프로젝트보다 규모가 컸음에도 불구하고 이슈가 적게 나왔습니다. "
    }
  ]
}
